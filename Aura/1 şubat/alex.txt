CALCAPEX

<aura:component controller="calcserveraura"
                implements="force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId,forceCommunity:availableForAllPageTypes,force:lightningQuickAction" access="global" >
    
    <!-- restaurant  -->
    <aura:attribute name="xnum" type="decimal" />
    <aura:attribute name="ynum" type="decimal" />
    <aura:attribute name="result" type="decimal" />
    <aura:attribute name="msg" type="string" />
    
    
    
    
     <lightning:card variant="Narrow" title="Calculator APEX" iconName="standard:account" footer="{!v.result}">
        <aura:set attribute="actions">
            
                <lightning:button label="+"  onclick="{! c.sum }"/>
                <lightning:button label="-"  onclick="{! c.sub }"/>
                <lightning:button label="*"  onclick="{! c.mul }"/>
                <lightning:button label="/"  onclick="{! c.div }"/>
            
            
        </aura:set>
        <p class="slds-p-horizontal_small">
           
                 <lightning:input type="decimal" name="xnumber" label="Enter X Number" value="{!v.xnum}" 
                         formatter="decimal" step="0.01"/>
    
                <lightning:input type="decimal" name="ynumber" label="Enter Y Number" value="{!v.ynum}" 
                                 formatter="decimal" step="0.01"/>
            
            <br /> 
            <div class="slds-text-heading_medium slds-text-color_error ">{!v.msg} </div>
            
            
            
        </p>
    </lightning:card>
    
    
  
  
    
    
</aura:component>








java//

({
    sum : function(component, event, helper) {
        // waitress
        
        var x = component.get("v.xnum");
        var y= component.get("v.ynum");
        
        console.log(x);
        console.log(y);
        
        var server = component.get("c.sumServer");    // calcServerController.sumServer(number1,number2);
        
        // console.log('------SERVER------------');
        // console.log(server);
        // set the sum apex method parameters
        server.setParams(
            {
            "number1":x,
            "number2":y
         }
        );
        
        // get the returned values form sum apex method.
        
        server.setCallback(this,function(res){
            
           // console.log(res);
            var state = res.getState();
            
           // console.log(state);
            
            if(state==='SUCCESS'){
                var returnVal = res.getReturnValue();
                console.log(returnVal);
                component.set("v.result",returnVal);
            } else {
                var errorval = res.getError()[0].message;                
                console.log(errorval);
                component.set("v.msg",errorval);
            }
            
              
            
            
        });
        
       
        $A.enqueueAction(server);
        
        
    },sub : function(component, event, helper) {
        // waitress
        
        var x = component.get("v.xnum");
        var y= component.get("v.ynum");
        
        console.log(x);
        console.log(y);
        
        var server = component.get("c.subServer");    // calcServerController.subServer(number1,number2);
        
        // console.log('------SERVER------------');
        // console.log(server);
        // set the sum apex method parameters
        server.setParams(
            {
            "number1":x,
            "number2":y
         }
        );
        
        // get the returned values form sum apex method.
        
        server.setCallback(this,function(res){
            
           // console.log(res);
            var state = res.getState();
            
           // console.log(state);
            
            if(state==='SUCCESS'){
                var returnVal = res.getReturnValue();
                console.log(returnVal);
                component.set("v.result",returnVal);
            } else {
                var errorval = res.getError()[0].message;                
                console.log(errorval);
                component.set("v.msg",errorval);
            }
            
              
            
            
        });
        
       
        $A.enqueueAction(server);
        
        
    },mul : function(component, event, helper) {
        // waitress
        
        var x = component.get("v.xnum");
        var y= component.get("v.ynum");
        
        console.log(x);
        console.log(y);
        
        var server = component.get("c.mulServer");    // calcServerController.mulServer(number1,number2);
        
        // console.log('------SERVER------------');
        // console.log(server);
        // set the sum apex method parameters
        server.setParams(
            {
            "number1":x,
            "number2":y
         }
        );
        
        // get the returned values form sum apex method.
        
        server.setCallback(this,function(res){
            
           // console.log(res);
            var state = res.getState();
            
           // console.log(state);
            
            if(state==='SUCCESS'){
                var returnVal = res.getReturnValue();
                console.log(returnVal);
                component.set("v.result",returnVal);
            } else {
                var errorval = res.getError()[0].message;                
                console.log(errorval);
                component.set("v.msg",errorval);
            }
            
              
            
            
        });
        
       
        $A.enqueueAction(server);
        
        
    },div : function(component, event, helper) {
        // waitress
        
        var x = component.get("v.xnum");
        var y= component.get("v.ynum");
        
        console.log(x);
        console.log(y);
        
        var server = component.get("c.divServer");    // calcServerController.divServer(number1,number2);
        
        // console.log('------SERVER------------');
        // console.log(server);
        // set the sum apex method parameters
        server.setParams(
            {
            "number1":x,
            "number2":y
         }
        );
        
        // get the returned values form sum apex method.
        
        server.setCallback(this,function(res){
            
           // console.log(res);
            var state = res.getState();
            
           // console.log(state);
            
            if(state==='SUCCESS'){
                var returnVal = res.getReturnValue();
                console.log(returnVal);
                component.set("v.result",returnVal);
            } else {
                var errorval = res.getError()[0].message;                
                console.log(errorval);
                component.set("v.msg",errorval);
            }
            
              
            
            
        });
        
       
        $A.enqueueAction(server);
        
        
    }
})






//server apex


public class calcserveraura {
    // kitchen
   
    @auraenabled
    public static Decimal sumServer(Decimal number1,Decimal number2){
       Decimal result=0; 
        
        try{
            result = number1+number2;
            
        } catch(Exception e){
            throw new AuraHandledException('Error Message : '+ e.getMessage());
            
        }
        
       return result;
     }
    
    
    @auraenabled
    public static Decimal subServer(Decimal number1,Decimal number2){
       Decimal result=0; 
        
        try{
            result = number1-number2;
            
        } catch(Exception e){
            throw new AuraHandledException('Error Message : '+ e.getMessage());
            
        }
        
       return result;
     }
    
    @auraenabled
    public static Decimal mulServer(Decimal number1,Decimal number2){
       Decimal result=0; 
        
        try{
            result = number1*number2;
            
        } catch(Exception e){
            throw new AuraHandledException('Error Message : '+ e.getMessage());
            
        }
        
       return result;
     }
    
    
    @auraenabled
    public static Decimal divServer(Decimal number1,Decimal number2){
       Decimal result=0; 
        
        try{
            result = number1/number2;
            
        } catch(Exception e){
            throw new AuraHandledException('Error Message : '+ e.getMessage());
            
        }
        
       return result;
     }
}