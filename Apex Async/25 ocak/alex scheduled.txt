- [ ]  Requires a separate class
- [ ]  Schedule to a specific time
- [ ]  System.Schedule
- [ ]  Limit of 100 scheduled jobs
- [ ]  No callouts from scheduled apex call future or queueble methods.




____________________________cron________________________________________
String CronEx = '00 30 8 1 * ?';
// 8:30 of every month 1st.

String CronEx = '00 00 13 * * ?';
// Every day 1 PM

String CronEx = '00 00 10 * MON-FRI';
// From Monday to Friday 10 AM

String cronExp = '00 30 20 * * ? *';
// 20:30 (8:30 PM) every month every day

String cronExp='0 0 20-23 ? * * *';

Name	Values	Special Chars
Seconds	0-59	
Minutes	0-59	
Hours	0-23	, - * /
Day of Month	1-31	, - * ? / L W
Month	1-12 (JAN - DEC )	, - * /
Day of Week	1-7 ( SUN - SAT )	, - * ? / L #
Optional Year	Null or 1970-2099	, - * /


- [ ]  , Multiple Values
- [ ]  - Range of Values
- [ ]  * All Possible Values
- [ ]  ? Do not specify any value
- [ ]  / Skip Exam : */3 every 3 hour or 2/3 : 2,5,8,11
- [ ]  L Last possible value
- [ ]  W Closest weekday

____________________________________________________________________________


public class LeadSchedulable implements Schedulable {

    public void execute(SchedulableContext sc){
          List<Lead> multiLead = [SELECT Id, LeadSource FROM Lead];
        
        for (Lead single:multiLead){
            single.LeadSource='Web';
        }
        update multiLead;
    }
}
__________________________DEBUG_______________________________

LeadSchedulable LS = New LeadSchedulable();

String CronStr='00 00 1 ? * SAT';
ID JobId=System.schedule('00 00 1 ? * SAT My Cron Text', CronStr, LS);


// Check Job Status
List<Sobject> CronJobs =[SELECT Id, TimesTriggered, CronJobDetailId, NextFireTime, PreviousFireTime FROM CronTrigger WHERE Id=:JobId];

System.debug('Jobs : '+ CronJobs);